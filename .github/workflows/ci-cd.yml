name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest

      - name: Lint (flake8)
        run: flake8 .

      - name: Run tests
        run: pytest -q

  build-and-push:
    needs: test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

#      - name: Build and push
#        uses: docker/build-push-action@v6
#        with:
#          context: .
#          push: true
#          tags: ${{ secrets.DOCKERHUB_USERNAME }}/housing-api:latest,${{ secrets.DOCKERHUB_USERNAME }}/housing-api:${{ github.sha }}

      - name: Build and push images with Docker Compose
        run: |
          docker compose build
          docker compose push
  deploy:
    needs: build-and-push
    runs-on: self-hosted
#    steps:
#      - name: Pull & Run Docker Locally
#        run: |
#          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/housing-api:latest
#          docker stop housing-api || true
#          docker rm housing-api || true
#          docker run -d --name housing-api -p 8000:8000 --restart always ${{ secrets.DOCKERHUB_USERNAME }}/housing-api:latest

    steps:
      - uses: actions/checkout@v4

      - name: Deploy with Docker Compose
        run: |
          docker compose pull
          docker compose up -d --remove-orphans

      # 8. Health-check /predict endpoint
      - name: Health-check /predict
        run: |
          curl -X POST "http://localhost:5001/predict" \
            -H "Content-Type: application/json" \
            -d '{"MedInc":8.4,"HouseAge":20,"AveRooms":5.2,"AveBedrms":1.1,"Population":850,"AveOccup":3.1,"Latitude":34.5,"Longitude":-118.3}'

